// 
//			Header Navigation Styling
// 
header>.container {
	// styles for the <header> must be placed in header.scss NOT this file

	// top-level <li> fill the height of the header
	.navlinks,
	.navlinks>ul,
	.navlinks>ul>li {
		height: 100%;
	}

	.navicons {
		display: none;
	}


	.navlinks {
		background-color: rgba(getVar($colors, basic, white), 1);

		// top-level <li> always a single row
		>ul {
			display: flex;
			flex-flow: row nowrap;

			// 
			@media screen and (min-width: 961px) {
				>li {
					margin: 0 0 0 getVar($sizing, gutter, px, small);

					&:first-of-type {
						margin: 0 0 0 0;
					}

					>a {

						// top-level <li> text is centered vertically
						>span {
							position: relative;
							top: 50%;
							transform: translateY(-50%);
						}
					}

					>.sub-menu {
						top: 90%;
					}
				}
			}
		}

		// sub-menu float and <li> are in a column
		.sub-menu {
			display: flex;
			flex-flow: column nowrap;
			position: absolute;
			top: 100%;
			right: 0;
			background-color: rgba(getVar($colors, basic, white), 1);
			@include boxshadow(1);
			min-width: 100%;

			// 
			li {
				>a {
					padding: getVar($sizing, gutter, px, small);
				}
			}

			// nested submenus fly out to the left
			.sub-menu {
				top: 0;
				right: 90%;
			}
		}



		// generic styles for basic elements
		a {
			display: block;
			margin: 0 0 0 0;
			height: 100%;

			// style link text and underline effect
			>span {
				display: inline-block;
				letter-spacing: 1px;
				font-size: 1.6rem;
				line-height: 1; // reset the line height -- its inheriting
				// underline hidden
				@include accentUnderline();
			}

			&:hover,
			&:focus,
			&:active {
				>span:before {
					width: 100%; // underline any item on hover
				}
			}
		}


		// conditional classes for line items
		li {

			&.menu-item-has-children {
				position: relative; // sub-menus align to their parent

				.sub-menu {
					display: none; // sub-menus initially hidden
				}

				//  add a down-chevron to items with sub-menus
				>a>span {
					position: relative;
					padding: 0 15px 0 0;

					&:after {
						position: absolute;
						display: inline-block;
						content: "\f078";
						font-family: "Font Awesome 5 Free";
						font-weight: 900;
						font-size: 1rem;
						top: 50%;
						right: 0;
						transform: translate(0, -50%) rotate(0deg);
						transition: all 0.25s ease;
					}
				}

				&:hover,
				&:focus,
				&:active {
					>a>span {

						// rotate chevron
						&:after {
							transform: translate(0, -50%) rotate(180deg);
							color: getVar($colors, brand, main);
						}
					}

					@media screen and (min-width: 961px) {
						// reveal direct childs dropdown menu
						>.sub-menu {
							display: flex;
						}
					}
				}
			}

			// underline active pages and parents of active pages
			&.current-menu-item,
			&.current-menu-ancestor,
			&.current-menu-parent {
				>a>span:before {
					width: 100%;
				}
			}
		}
	}


	@media screen and (max-width: 960px) {

		position: relative;
		
		
		// revealed / hidden navicons
		.navicons {
			display: block;
			i.fa-bars {
				display: block;
			}
			i.fa-times {
				display: none;
			}
			&.revealed {
				i.fa-times {
					display: block;
				}
				i.fa-bars {
					display: none;
				}
			}
		}
		

		// mobile nav changes
		.navlinks {
			@include boxshadow(2);
			height: auto;
			position: absolute;
			top: 100%;
			left: 0;
			width: 100%;

			ul {
				display: none;
				flex-flow: column nowrap; // force 1 column
				li {
					> a {
						padding: getVar($sizing, gutter, px, small);	// accordion style padding/margin for line items
					}
				}
			}


			// the mobile nav is revealed
			&.revealed {

				> ul {
					display: flex;
				}
				
				
			}
			
			li.menu-item-has-children {
				// transition: background-color 0.3s ease;
				.sub-menu {
					box-shadow: none;
					> li {
						padding: 0 0 0 getVar($sizing, gutter, px, small);
					}
				}
				
				&.revealed {
					background-color: rgba(getVar($colors, brand, lshade), 1);
					>a >span:before {
						width: 100%;
					}
					
					
					> .sub-menu {
						display: flex;
						top: 0;
						right: 0;
						position: relative;
					}
				}
			}
		}
	}
}